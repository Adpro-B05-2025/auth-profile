# .github/workflows/build-and-deploy.yml
name: Build and Deploy Spring App

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
      DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
      DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION_MS: ${{ secrets.JWT_EXPIRATION_MS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set gradlew as executable
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper (skip tests and jacoco)
        run: ./gradlew build -x test -x jacocoTestReport

      - name: Find built JAR file
        id: jar
        run: |
          JAR_FILE=$(ls build/libs/*.jar | head -n 1)
          echo "jar_file=$JAR_FILE" >> "$GITHUB_OUTPUT"

      - name: Copy JAR to EC2 with scp
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no "${{ steps.jar.outputs.jar_file }}" ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/appl/app.jar

      - name: SSH and restart app.service
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo systemctl stop app.service || true
            sudo systemctl start app.service
            sudo systemctl status app.service --no-pager
