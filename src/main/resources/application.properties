server.port=8081
service.rating.url=http://localhost:8083
spring.application.name=auth-profile

# Database configuration - using directly referenced environment variables
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/auth-profile}
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
spring.datasource.password=kakakais8
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT configuration
pandacare.app.jwtSecret=VG2SI0+K0ASke+Su8Z3aIzv2pKULu9zjZ3O8kNR9y+k=
pandacare.app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# Active profile
spring.profiles.active=dev

# For detailed logging (useful during development)
logging.level.org.springframework.security=DEBUG
logging.level.id.ac.ui.cs.advprog.authprofile=DEBUG

# Cross-Origin Resource Sharing (CORS) configuration
# This is already handled in your controllers with @CrossOrigin annotation

# Actuator endpoints for health checks and monitoring
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always