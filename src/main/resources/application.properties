server.port=8081
spring.application.name=auth-profile

# Database configuration - using directly referenced environment variables
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/auth-profile}
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
spring.datasource.password=${DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT configuration
pandacare.app.jwtSecret=${JWT_SECRET:defaultSecretKeyForDevelopmentOnly}
pandacare.app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# Active profile
spring.profiles.active=dev

# For detailed logging (useful during development)
logging.level.org.springframework.security=DEBUG
logging.level.id.ac.ui.cs.advprog.authprofile=DEBUG

# MONITORING CONFIGURATION
# ========================

# Actuator endpoints configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,configprops,beans,threaddump,heapdump,loggers,scheduledtasks,httptrace,mappings
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.info.enabled=true

# Prometheus metrics configuration
management.prometheus.metrics.export.enabled=true
management.metrics.export.prometheus.enabled=true

# Application info for monitoring
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true

# Health indicators
management.health.db.enabled=true
management.health.diskspace.enabled=true

# Metrics configuration
management.metrics.enable.all=true
management.metrics.enable.jvm=true
management.metrics.enable.process=true
management.metrics.enable.system=true
management.metrics.enable.application=true
management.metrics.enable.http=true
management.metrics.enable.jdbc=true
management.metrics.enable.hikaricp=true

# Custom metrics configuration
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=${spring.profiles.active}
management.metrics.tags.version=@project.version@

# JVM metrics
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s,2s

# Database connection pool metrics
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Logging configuration for monitoring
logging.level.org.springframework.boot.actuate=INFO
logging.level.io.micrometer=INFO

# Security configuration for actuator endpoints
management.endpoints.web.base-path=/actuator
management.server.port=${server.port}

# CORS configuration for monitoring endpoints (if needed)
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST