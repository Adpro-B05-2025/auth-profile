services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pandacare-postgres-local
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - pandacare-local
    restart: unless-stopped
    env_file: .env.local
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # PandaCare Auth-Profile Service
  auth-profile:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: pandacare-auth-profile-local
    ports:
      - "${SERVER_PORT:-8081}:${SERVER_PORT:-8081}"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - pandacare-local
    restart: unless-stopped
    env_file: .env.local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT:-8081}/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Local Prometheus for Testing
  prometheus:
    image: prom/prometheus:latest
    container_name: pandacare-prometheus-local
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
    environment:
      - GRAFANA_CLOUD_USER=${GRAFANA_CLOUD_USER}
      - GRAFANA_CLOUD_API_KEY=${GRAFANA_CLOUD_API_KEY}
      - GRAFANA_REMOTE_WRITE_URL=${GRAFANA_REMOTE_WRITE_URL}
      - ENVIRONMENT=${ENVIRONMENT}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1d'
      - '--web.enable-lifecycle'
      - '--log.level=info'
      - '--config.expand-env'  # This enables environment variable expansion
    restart: unless-stopped
    networks:
      - pandacare-local
    depends_on:
      auth-profile:
        condition: service_healthy
    env_file: .env.local

  # Local Grafana for Testing
  grafana:
    image: grafana/grafana:latest
    container_name: pandacare-grafana-local
    ports:
      - "3000:3000"
    volumes:
      - grafana_data_local:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_LOCAL_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_LOCAL_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - pandacare-local
    env_file: .env.local

  # Node Exporter for System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: pandacare-node-exporter-local
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'
    restart: unless-stopped
    networks:
      - pandacare-local

  # cAdvisor for Container Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: pandacare-cadvisor-local
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - pandacare-local

  # PostgreSQL Exporter for Database Metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: pandacare-postgres-exporter-local
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - pandacare-local
    env_file: .env.local

volumes:
  postgres_data_local:
    driver: local
  grafana_data_local:
    driver: local

networks:
  pandacare-local:
    driver: bridge
    name: pandacare-local